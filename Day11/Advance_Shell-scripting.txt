///===Advance Shell_scripting===\\\

1. if elif
        -same as if else '
        -used for many conditionals statements
        eg. a= 1000
            b= 200
            c= 300

            if [[ $a -gt $b && $a -gt $b ]]
            then
             echo "A is biggest"
            elif [[ $b -gt $a && $b -gt $c ]]
            then
             echo "B is biggest"
            else
             echo "C is biggest"
            fi
    -this was the example of if_elif
    -cmds used 
        -nano if_elif.sh
        -written the Script
        -ctrl + x , yes
        -chmod 777 if_elif.sh (given permission for execution)
        - ./if_elif.sh


==========================================================================================

2. loops
    -for loop
        -for ((i=0; i<10 ; i++))
         do
          echo "$i"
         done

    -another example for iterating file with .txt extensiton
        -
          for FILE in *.txt
          do
           echo $FILE
          done

    - also learned how to make multiple files from single command
        - touch file-(1..10).txt
    it will make 10 txt files


==========================================================================================

3. Funcions
    -functions are used to automate the tasks
    -eg for adding user we will not write code every time we will write a function
        - add_user()
          {
            USER=$1
            PASS=$2

            useradd -m -p $PASS $USER && echo "successfully added user"
          }

          #MAIN

          add_user kedarP new@123

    -while adding user we need to be a super user  (sudo-->super user do)
    -so we use below command
        - sudo ./adding_user.sh

    -we can see the added user in etc folder ,, we can we cmd as below
        - cat /etc/passwd



==========================================================================================

4. Actual Script work of Devops
    -written Actual script of devops to automate backups
        - 
          src_dir=/home/ubuntu/scripts
          tgt_dir=/home/ubuntu/backups

          curr_timestamp=$(date "+%Y-%m-%d-%H-%M-%S")
          backup_file=$tgt_dir/$curr_timestamp.tgz
           
           echo "$curr_timestamp"

          tar czf $backup_file --absolute-name $src_dir

          echo "bacup complete"

        --absolute-name(added beacuse of warning removing leading '\' from member names)  



==========================================================================================