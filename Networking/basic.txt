\\*** All Basic concepts Of Networking for DevOps  ***///

Part 1: Basic Concepts

1. IP Addressing

• Concept: IP addresses are unique identifiers for devices on a network, allowing them to communicate with each other.

•Types:
    • IPv4: 192.168.0.1 (32-bit address).
    • IPv6: fe80::1ff:fe23:4567:890a (128-bit address).
• Real-Time DevOps Example: Assigning static IP addresses to production servers ensures  they always have the same address for consistency in service communication.

• Windows: Use ipconfig to check the IP address.
• Linux: Use ip a to view IP configurations.

=========================================================================================

2. DNS (Domain Name System)

• Concept: DNS translates human-readable domain names (like myapp.com) to IP addresses (like 192.168.0.10).

• Real-Time DevOps Example: When deploying microservices, you may need to set up DNS to map your services to specific domains, ensuring easy access and routing.

• Windows: Use nslookup myapp.com.
• Linux: Use dig myapp.com.

=========================================================================================

3. MAC Address

• Concept: A unique identifier assigned to each network interface (hardware-based).

• Real-Time DevOps Example: In a cloud environment, monitoring MAC addresses helps track devices and prevent unauthorized access.

• Windows: Use getmac to display the MAC address.
• Linux: Use ifconfig or ip link show.


=========================================================================================

4. Subnetting

• Concept: Subnetting divides large networks into smaller, more manageable ones.

• Real-Time DevOps Example: Subnetting can be used to segregate production, development, and testing environments to isolate traffic and increase security.

• Example: A /24 subnet mask (255.255.255.0) provides 256 IP addresses, suitable for a small office or team setup.

• Windows/Linux: You can calculate and view subnets using various tools like ipconfig or ifconfig.


=========================================================================================

5. Ping

• Concept: Ping sends ICMP (Internet Control Message Protocol) packets to a destination to check if it is reachable.

• Real-Time DevOps Example: Use ping to check the availability of a service or server before deploying a new feature.

• Windows/Linux: ping <IP or domain>

=========================================================================================

6. Traceroute

• Concept: Shows the path packets take to reach a destination.

• Real-Time DevOps Example: Troubleshoot network latency by using traceroute to see where delays are occurring between your service and external clients.

• Windows: Use tracert myapp.com.
• Linux: Use traceroute myapp.com.


=========================================================================================

7. Netstat

• Concept: Displays active network connections and listening ports.

• Real-Time DevOps Example: Check for rogue services or unexpected open ports in your infrastructure, especially during security audits.

• Windows/Linux: netstat -an


=========================================================================================

8. SSH (Secure Shell)

• Concept: Securely connects to remote servers over the network.

• Real-Time DevOps Example: Use SSH to manage cloud-based Linux servers, deploy code, or troubleshoot issues on production systems.

• Windows: Use ssh user@hostname in PowerShell or tools like PuTTY.
• Linux: Use ssh user@hostname in the terminal.