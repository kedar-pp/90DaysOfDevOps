///====Starting with docker ====\\\

1. Docker :- 
        Docker is a platform that f=helps devlopers build , share ,run applications with container

    -real time Scenario to use docker (Use case)
        - Dev1- Started project
          Dev2- Join after 2 years

          Now frameworks and library version has updated & some library or code not working properly 
        
        ***Then their comes a solution :-

            - A docker container has everything about a project like code, runtime , sytem tools , system libraries and settings with specific version.

                -eg . for project we need :-
                        - Node js 16 
                          NPM 7.2
                          React 16.3
                          Webpack 4
                          jest 23.1.0
                      we have to put this in docker,After 10 years we will get the same versions and the project will run 


=====================================================================


2. -Images : They are templates of project
        - It is a kind of ready-to-use software read-only template
        - Images are made with source codes,libraries,external dependencies and tools
        - Images can not be updated
        - If you want to make change in image you have to create new image.
        - Images can not run directly

            - eg.
                 -Images include:- 
                   Nodejs setup
                   React setup
                   Code of application
                   Dependencies
                   Any other supporting tool
                   docker file tool
            We can say that image is a template of project       


   -Container : The Running Instance of Image.